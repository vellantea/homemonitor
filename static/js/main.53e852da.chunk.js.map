{"version":3,"sources":["Components/Navbar.js","Pages/home.js","Pages/login.js","App.js","serviceWorker.js","index.js","images/icon.png"],"names":["Navbar","AppBar","Toolbar","Button","color","component","Link","to","Component","home","Grid","container","spacing","item","sm","xs","login","handleSubmit","event","console","log","handleChange","setState","target","name","value","state","email","passsword","loading","errors","classes","this","props","className","form","style","width","height","src","AppIcon","alt","image","Typography","variant","pageTitle","noValidate","onSubmit","TextField","id","type","label","textField","onChange","fullWidth","password","button","withStyles","textAlign","margin","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.53e852da.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'react-router-dom/Link';\n// Material UI\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nclass Navbar extends Component{\n    render(){\n        return(\n            <AppBar>\n                <Toolbar>\n                    <Button color=\"inherit\" component={Link} to=\"/login\" >Login</Button>\n                    <Button color=\"inherit\" component={Link} to= \"/\" >My Home</Button>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\nexport default Navbar","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\n\nclass home extends Component{\n    render(){\n        return(\n            <Grid container spacing={16}>\n                <Grid item sm={8} xs={12}>\n                    <p>Profile</p>\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <p>Locations</p>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nexport default home","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/icon.png';\n// MUI \nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from'@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = {\n    form: {\n        textAlign: 'center'\n    },\n    image:{\n        margin:'10px auto 10px auto'\n    },\n    pageTitle:{\n        margin: 'auto auto auto auto'\n    },\n    button:{\n        margin: '30px auto 30px auto',\n        height: 50,\n        width: 150\n    },\n    textField:{\n        margin: '10px auto 10px auto'\n    }\n}\n\n\nclass login extends Component{\n    constructor(){\n        super();\n        this.state = {\n            email:'',\n            passsword:'',\n            loading: false,\n            errors: {}\n        }\n    }\n    handleSubmit = (event) => {\n        console.log('Welcome')\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render(){\n        const { classes } = this.props;\n        return(\n            <Grid container className = {classes.form}>\n\n                <Grid item sm/>\n                <Grid item sm>\n                    <img style={{ width:150, height:150 }}\n                    src={AppIcon} alt=\"WeatherSensor\" className={classes.image}/>\n                    <Typography \n                        variant=\"h2\" \n                        className={classes.pageTitle}>\n                        Login\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                            id=\"email\" \n                            name=\"email\" \n                            type=\"email\" \n                            label=\"Email\" \n                            className={classes.textField}\n                            value={this.state.email} \n                            onChange={this.handleChange} \n                            fullWidth/>\n                        <TextField \n                            id=\"password\" \n                            name=\"password\" \n                            type=\"password\" \n                            label=\"Password\" \n                            className={classes.textField}\n                            value={this.state.password} \n                            onChange={this.handleChange} \n                            fullWidth/>\n                        <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            color=\"primary\" \n                            className={classes.button}>\n                            Submit\n                            </Button>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(login);","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\n//Components\nimport Navbar from './Components/Navbar';\n\n// Pages\nimport home from './Pages/home';\nimport login from './Pages/login';\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: {\n      light:'#90a4ae',\n      main:'#37474f',\n      dark:'#263238',\n      contrastText:'#fff'\n    },\n    secondary: {\n      light:'#e0e0e0',\n      main:'#757575',\n      dark:'#424242',\n      contrastText:'#fff'\n    }\n  },\n})\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path = \"/\" component={home}/>\n            <Route exact path = \"/login\" component={login}/>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n    </MuiThemeProvider>\n  ); \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.8b4fd5f1.png\";"],"sourceRoot":""}